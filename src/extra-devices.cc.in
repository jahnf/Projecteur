// This file is part of Projecteur - https://github.com/jahnf/projecteur - See LICENSE.md and README.md
#include "spotlight.h"

#include <QtCore>

#include <vector>

// Generated during CMake configuration time

namespace {
  // List of supported extra-devices
  const std::vector<Spotlight::SupportedDevice> supportedExtraDevices { // @SUPPORTED_EXTRA_DEVICES@
  };
}

// Function declaration to check for extra devices, defintion in generated source
bool isExtraDeviceSupported(quint16 vendorId, quint16 productId)
{
  const auto it = std::find_if(supportedExtraDevices.cbegin(), supportedExtraDevices.cend(),
  [vendorId, productId](const Spotlight::SupportedDevice& d) {
    return (vendorId == d.vendorId) && (productId == d.productId);
  });
  return it != supportedExtraDevices.cend();
};

QString getExtraDeviceName(quint16 vendorId, quint16 productId)
{
  const auto it = std::find_if(supportedExtraDevices.cbegin(), supportedExtraDevices.cend(),
  [vendorId, productId](const Spotlight::SupportedDevice& d) {
    return (vendorId == d.vendorId) && (productId == d.productId);
  });
  if (it != supportedExtraDevices.cend()) return it->name;
  return QString();
};
